# Generated by Django 4.2.16 on 2025-09-30 23:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('game_content', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(max_length=100)),
                ('level', models.PositiveIntegerField(default=1)),
                ('experience_points', models.PositiveIntegerField(default=0)),
                ('alignment', models.CharField(blank=True, choices=[('LG', 'Lawful Good'), ('NG', 'Neutral Good'), ('CG', 'Chaotic Good'), ('LN', 'Lawful Neutral'), ('N', 'True Neutral'), ('CN', 'Chaotic Neutral'), ('LE', 'Lawful Evil'), ('NE', 'Neutral Evil'), ('CE', 'Chaotic Evil')], max_length=2)),
                ('current_hp', models.PositiveIntegerField(default=0)),
                ('max_hp', models.PositiveIntegerField(default=0)),
                ('temporary_hp', models.PositiveIntegerField(default=0)),
                ('armor_class', models.PositiveIntegerField(default=10)),
                ('initiative', models.IntegerField(default=0)),
                ('speed', models.PositiveIntegerField(default=30)),
                ('proficiency_bonus', models.PositiveIntegerField(default=2)),
                ('inspiration', models.BooleanField(default=False)),
                ('additional_notes', models.JSONField(blank=True, default=dict)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_modified_date', models.DateTimeField(auto_now=True)),
                ('is_complete', models.BooleanField(default=False)),
                ('character_state', models.CharField(choices=[('draft', 'Draft'), ('complete', 'Complete'), ('archived', 'Archived')], default='draft', max_length=10)),
                ('background', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='game_content.background')),
                ('dnd_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='game_content.dndclass')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='game_content.species')),
                ('subclass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_content.subclass')),
            ],
            options={
                'ordering': ['-last_modified_date'],
            },
        ),
        migrations.CreateModel(
            name='CharacterSpell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('always_prepared', models.BooleanField(default=False, help_text='Always prepared (racial, class features, etc.)')),
                ('prepared', models.BooleanField(default=False, help_text='Currently prepared')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', to='characters.character')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.spell')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_type', models.CharField(choices=[('none', 'Not Proficient'), ('proficient', 'Proficient'), ('expertise', 'Expertise')], default='none', max_length=12)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='characters.character')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.skill')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSavingThrow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ability_name', models.CharField(choices=[('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], max_length=3)),
                ('is_proficient', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saving_throws', to='characters.character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterProficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency_type', models.CharField(choices=[('armor', 'Armor'), ('weapon', 'Weapon'), ('tool', 'Tool'), ('language', 'Language')], max_length=10)),
                ('proficiency_name', models.CharField(max_length=100)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proficiencies', to='characters.character')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='characters.character')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.language')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uses_remaining', models.PositiveIntegerField(default=0, help_text='Uses remaining (if limited)')),
                ('choice_made', models.JSONField(blank=True, default=dict, help_text='Choices made for this feature')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_features', to='characters.character')),
                ('class_feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.classfeature')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterFeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('background', 'Background'), ('class', 'Class Feature'), ('asi', 'Ability Score Improvement'), ('species', 'Species')], max_length=12)),
                ('choice_made', models.JSONField(blank=True, default=dict, help_text='Choices made for this feat')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feats', to='characters.character')),
                ('feat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.feat')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('equipped', models.BooleanField(default=False)),
                ('attuned', models.BooleanField(default=False, help_text='For magic items requiring attunement')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='characters.character')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_content.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.CharField(blank=True, max_length=20)),
                ('weight', models.CharField(blank=True, max_length=20)),
                ('eyes', models.CharField(blank=True, max_length=50)),
                ('skin', models.CharField(blank=True, max_length=50)),
                ('hair', models.CharField(blank=True, max_length=50)),
                ('pronouns', models.CharField(blank=True, max_length=50)),
                ('portrait_url', models.URLField(blank=True, help_text='S3 URL for character portrait')),
                ('personality_traits', models.TextField(blank=True, help_text="Character's personality traits")),
                ('ideals', models.TextField(blank=True, help_text="Character's ideals and motivations")),
                ('bonds', models.TextField(blank=True, help_text="Character's bonds and connections")),
                ('flaws', models.TextField(blank=True, help_text="Character's flaws and weaknesses")),
                ('backstory', models.TextField(blank=True, help_text="Character's backstory")),
                ('notes', models.TextField(blank=True, help_text='Additional character notes')),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='characters.character')),
            ],
            options={
                'verbose_name_plural': 'Character Details',
            },
        ),
        migrations.CreateModel(
            name='CharacterAbilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength_score', models.PositiveIntegerField(default=10)),
                ('dexterity_score', models.PositiveIntegerField(default=10)),
                ('constitution_score', models.PositiveIntegerField(default=10)),
                ('intelligence_score', models.PositiveIntegerField(default=10)),
                ('wisdom_score', models.PositiveIntegerField(default=10)),
                ('charisma_score', models.PositiveIntegerField(default=10)),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='characters.character')),
            ],
            options={
                'verbose_name_plural': 'Character Abilities',
            },
        ),
    ]
