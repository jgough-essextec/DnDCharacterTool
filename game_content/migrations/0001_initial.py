# Generated by Django 4.2.16 on 2025-09-30 23:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DnDClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('primary_ability', models.CharField(choices=[('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], max_length=3)),
                ('hit_die', models.PositiveIntegerField(default=8, help_text='Hit die size (d6=6, d8=8, etc.)')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('hard', 'Hard')], default='moderate', max_length=10)),
                ('armor_proficiencies', models.JSONField(blank=True, default=list)),
                ('weapon_proficiencies', models.JSONField(blank=True, default=list)),
                ('saving_throw_proficiencies', models.JSONField(blank=True, default=list)),
                ('skill_proficiency_count', models.PositiveIntegerField(default=2)),
                ('skill_proficiency_choices', models.JSONField(blank=True, default=list)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('equipment_type', models.CharField(choices=[('weapon', 'Weapon'), ('armor', 'Armor'), ('shield', 'Shield'), ('tool', 'Tool'), ('gear', 'Adventuring Gear'), ('instrument', 'Musical Instrument'), ('kit', 'Kit'), ('mount', 'Mount and Vehicle'), ('trade_good', 'Trade Good')], max_length=20)),
                ('cost_gp', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, help_text='Weight in pounds', max_digits=5)),
                ('description', models.TextField(blank=True)),
                ('properties', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['equipment_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Feat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('feat_type', models.CharField(choices=[('origin', 'Origin'), ('general', 'General'), ('fighting_style', 'Fighting Style')], max_length=20)),
                ('description', models.TextField()),
                ('repeatable', models.BooleanField(default=False)),
                ('prerequisites', models.JSONField(blank=True, default=dict)),
                ('ability_score_increase', models.JSONField(blank=True, default=dict)),
                ('benefits', models.JSONField(blank=True, default=list)),
            ],
            options={
                'ordering': ['feat_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('script', models.CharField(blank=True, max_length=50)),
                ('typical_speakers', models.CharField(blank=True, max_length=200)),
                ('rarity', models.CharField(choices=[('standard', 'Standard'), ('exotic', 'Exotic')], default='standard', max_length=20)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('associated_ability', models.CharField(choices=[('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], max_length=3)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('size', models.CharField(choices=[('T', 'Tiny'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('H', 'Huge'), ('G', 'Gargantuan')], default='M', max_length=1)),
                ('speed', models.PositiveIntegerField(default=30, help_text='Base walking speed in feet')),
                ('darkvision_range', models.PositiveIntegerField(default=0, help_text='Darkvision range in feet (0 if none)')),
                ('languages', models.JSONField(blank=True, default=list, help_text='List of automatic languages')),
            ],
            options={
                'verbose_name_plural': 'Species',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('equipment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game_content.equipment')),
                ('armor_type', models.CharField(choices=[('light', 'Light Armor'), ('medium', 'Medium Armor'), ('heavy', 'Heavy Armor'), ('shield', 'Shield')], max_length=10)),
                ('base_ac', models.PositiveIntegerField(help_text='Base AC provided')),
                ('dex_bonus_limit', models.PositiveIntegerField(blank=True, help_text='Max DEX bonus (null = unlimited)', null=True)),
                ('strength_requirement', models.PositiveIntegerField(blank=True, help_text='Minimum STR required', null=True)),
                ('stealth_disadvantage', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['armor_type', 'name'],
            },
            bases=('game_content.equipment',),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('equipment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='game_content.equipment')),
                ('weapon_category', models.CharField(choices=[('simple', 'Simple'), ('martial', 'Martial')], default='simple', max_length=10)),
                ('damage_dice', models.CharField(help_text="e.g., '1d6', '1d8', '2d6'", max_length=20)),
                ('damage_type', models.CharField(choices=[('acid', 'Acid'), ('bludgeoning', 'Bludgeoning'), ('cold', 'Cold'), ('fire', 'Fire'), ('force', 'Force'), ('lightning', 'Lightning'), ('necrotic', 'Necrotic'), ('piercing', 'Piercing'), ('poison', 'Poison'), ('psychic', 'Psychic'), ('radiant', 'Radiant'), ('slashing', 'Slashing'), ('thunder', 'Thunder')], max_length=20)),
                ('range_normal', models.PositiveIntegerField(blank=True, help_text='Normal range in feet (ranged weapons)', null=True)),
                ('range_long', models.PositiveIntegerField(blank=True, help_text='Long range in feet (ranged weapons)', null=True)),
                ('mastery_property', models.CharField(blank=True, help_text='2024 weapon mastery property', max_length=50)),
            ],
            options={
                'ordering': ['weapon_category', 'name'],
            },
            bases=('game_content.equipment',),
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('spell_level', models.PositiveIntegerField(help_text='0 for cantrips, 1-9 for spell levels')),
                ('school', models.CharField(choices=[('abjuration', 'Abjuration'), ('conjuration', 'Conjuration'), ('divination', 'Divination'), ('enchantment', 'Enchantment'), ('evocation', 'Evocation'), ('illusion', 'Illusion'), ('necromancy', 'Necromancy'), ('transmutation', 'Transmutation')], max_length=20)),
                ('casting_time', models.CharField(choices=[('action', 'Action'), ('bonus_action', 'Bonus Action'), ('reaction', 'Reaction'), ('1_minute', '1 Minute'), ('10_minutes', '10 Minutes'), ('1_hour', '1 Hour'), ('8_hours', '8 Hours'), ('24_hours', '24 Hours')], max_length=20)),
                ('range', models.CharField(choices=[('self', 'Self'), ('touch', 'Touch'), ('5_feet', '5 feet'), ('10_feet', '10 feet'), ('30_feet', '30 feet'), ('60_feet', '60 feet'), ('90_feet', '90 feet'), ('120_feet', '120 feet'), ('150_feet', '150 feet'), ('300_feet', '300 feet'), ('500_feet', '500 feet'), ('1_mile', '1 mile'), ('sight', 'Sight'), ('unlimited', 'Unlimited'), ('special', 'Special')], max_length=20)),
                ('duration', models.CharField(choices=[('instantaneous', 'Instantaneous'), ('1_round', '1 round'), ('1_minute', '1 minute'), ('10_minutes', '10 minutes'), ('1_hour', '1 hour'), ('8_hours', '8 hours'), ('24_hours', '24 hours'), ('7_days', '7 days'), ('30_days', '30 days'), ('permanent', 'Until dispelled'), ('special', 'Special')], max_length=20)),
                ('concentration', models.BooleanField(default=False)),
                ('ritual', models.BooleanField(default=False)),
                ('components_v', models.BooleanField(default=False, help_text='Verbal component')),
                ('components_s', models.BooleanField(default=False, help_text='Somatic component')),
                ('components_m', models.BooleanField(default=False, help_text='Material component')),
                ('material_components', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField()),
                ('higher_level_description', models.TextField(blank=True, help_text='At Higher Levels effect')),
                ('available_to_classes', models.ManyToManyField(blank=True, related_name='spells', to='game_content.dndclass')),
            ],
            options={
                'ordering': ['spell_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ClassFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level_acquired', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('feature_type', models.CharField(choices=[('feature', 'Class Feature'), ('asi', 'Ability Score Improvement'), ('spell', 'Spellcasting'), ('invocation', 'Eldritch Invocation'), ('maneuver', 'Fighting Maneuver')], default='feature', max_length=20)),
                ('uses_per_rest', models.CharField(blank=True, help_text="e.g., '1/long rest', 'prof bonus/long rest'", max_length=50)),
                ('choice_options', models.JSONField(blank=True, default=list)),
                ('dnd_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='game_content.dndclass')),
            ],
            options={
                'ordering': ['dnd_class', 'level_acquired', 'name'],
                'unique_together': {('dnd_class', 'name', 'level_acquired')},
            },
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('skill_proficiencies', models.JSONField(blank=True, default=list)),
                ('tool_proficiencies', models.JSONField(blank=True, default=list)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('equipment_options', models.JSONField(blank=True, default=list)),
                ('starting_gold', models.PositiveIntegerField(default=50)),
                ('origin_feat', models.ForeignKey(blank=True, limit_choices_to={'feat_type': 'origin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_content.feat')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subclass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('level_available', models.PositiveIntegerField(default=3)),
                ('dnd_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subclasses', to='game_content.dndclass')),
                ('features', models.ManyToManyField(blank=True, related_name='subclasses', to='game_content.classfeature')),
            ],
            options={
                'ordering': ['dnd_class', 'name'],
                'unique_together': {('dnd_class', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SpeciesTrait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('trait_type', models.CharField(choices=[('racial', 'Racial Trait'), ('ability', 'Ability'), ('resistance', 'Resistance'), ('immunity', 'Immunity'), ('proficiency', 'Proficiency')], default='racial', max_length=20)),
                ('mechanical_effect', models.JSONField(blank=True, default=dict)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traits', to='game_content.species')),
            ],
            options={
                'ordering': ['species', 'name'],
                'unique_together': {('species', 'name')},
            },
        ),
    ]
